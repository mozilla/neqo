name: Bench
on:
  workflow_call:
env:
  CARGO_PROFILE_BENCH_BUILD_OVERRIDE_DEBUG: true
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  TOOLCHAIN: nightly

jobs:
  bench:
    name: Benchmark
    runs-on: self-hosted
    defaults:
      run:
        shell: bash

    steps:
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: $TOOLCHAIN
          components: rustfmt

      - name: Configure Rust
        run: echo "RUSTFLAGS=-C link-arg=-fuse-ld=lld -C link-arg=-Wl,--no-rosegment" >> "$GITHUB_ENV"

      - name: Install sccache
        uses: mozilla-actions/sccache-action@v0.0.4

      - name: Enable sccache
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> "$GITHUB_ENV"
          echo "RUSTC_WRAPPER=sccache" >> "$GITHUB_ENV"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: cargo +$TOOLCHAIN bench --features ci,bench --no-run

      # Disable turboboost, hyperthreading and use performance governor.
      - name: Prepare machine
        run: sudo /root/bin/prep.sh

      # Pin the benchmark to core 0 and run it at elevated priority.
      - name: Benchmark
        run: |
          nice -n -20 taskset -c 0 \
            cargo +$TOOLCHAIN bench --features ci,bench | tee output.txt

      # Enable turboboost, hyperthreading and use powersave governor.
      - name: Restore machine
        run: sudo /root/bin/unprep.sh
        if: success() || failure()

      - name: Download previous benchmark results
        uses: actions/cache@v4
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark

      # - name: Store current benchmark results
      #   uses: benchmark-action/github-action-benchmark@v1
      #   with:
      #     tool: 'cargo'
      #     output-file-path: output.txt
      #     external-data-json-path: ./cache/benchmark-data.json
      #     fail-on-alert: true
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     comment-on-alert: true
      #     summary-always: true

