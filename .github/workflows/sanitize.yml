name: Sanitize
on:
  push:
    branches: ["main"]
    paths-ignore: ["*.md", "*.png", "*.svg", "LICENSE-*"]
  pull_request:
    branches: ["main"]
    paths-ignore: ["*.md", "*.png", "*.svg", "LICENSE-*"]
  merge_group:
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  sanitize:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest] # No Windows support for sanitizers.
        sanitizer: [address, thread, leak]
        exclude:
          # Leak sanitizer is not supported on macOS.
          - os: macos-latest
            sanitizer: leak
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - uses: ./.github/actions/rust
        with:
          version: nightly
          # components: llvm-tools-preview
          components: rust-src
          tools: cargo-nextest
          token: ${{ secrets.GITHUB_TOKEN }}

      - id: nss-version
        run: echo "minimum=$(cat neqo-crypto/min_version.txt)" >> "$GITHUB_OUTPUT"

      - uses: ./.github/actions/nss
        with:
          minimum-version: ${{ steps.nss-version.outputs.minimum }}

      - name: Run tests with sanitizers
        env:
          RUST_LOG: trace
          RUSTFLAGS: "-Z sanitizer=${{ matrix.sanitizer }}"
          RUSTDOCFLAGS: "-Z sanitizer=${{ matrix.sanitizer }}"
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            TARGET="x86_64-unknown-linux-gnu"
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            TARGET="aarch64-apple-darwin"
          fi
          cargo nextest run -Z build-std --features ci --target "$TARGET"
