name: Sanitize
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  merge_group:
  workflow_dispatch:
env:
  DUMP_SIMULATION_SEEDS: /tmp/simulation-seeds

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:
  sanitize:
    if: github.actor != 'dependabot[bot]'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04, macos-14] # No Windows support for sanitizers.
        sanitizer: [address, thread, leak] # TODO: memory
        exclude:
          # Memory and leak sanitizers are not supported on macOS.
          - os: macos-14
            sanitizer: leak
          # - os: macos-14
          #   sanitizer: memory
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: ./.github/actions/rust
        with:
          version: nightly
          components: rust-src
          tools: cargo-nextest
          token: ${{ secrets.GITHUB_TOKEN }}

      - id: nss-version
        run: echo "minimum=$(cat neqo-crypto/min_version.txt)" >> "$GITHUB_OUTPUT"

      - uses: ./.github/actions/nss
        with:
          minimum-version: ${{ steps.nss-version.outputs.minimum }}

      - name: Run tests with sanitizers
        env:
          RUST_LOG: trace
          RUSTDOCFLAGS: "-Z sanitizer=${{ matrix.sanitizer }}"
          ASAN_OPTIONS: detect_leaks=1:detect_stack_use_after_return=1
          RUST_BACKTRACE: 1
        run: |
          # Append to RUSTFLAGS, which may already be set by the Rust action.
          export RUSTFLAGS="-Z sanitizer=${{ matrix.sanitizer }} $RUSTFLAGS"
          if [ "${{ matrix.os }}" = "ubuntu-24.04" ]; then
            sudo apt-get install -y --no-install-recommends llvm
            TARGET="x86_64-unknown-linux-gnu"
          elif [ "${{ matrix.os }}" = "macos-14" ]; then
            # llvm-symbolizer (as part of llvm) is installed by default on macOS runners
            TARGET="aarch64-apple-darwin"
            # Suppress non-neqo leaks on macOS. TODO: Check occasionally if these are still needed.
            {
              echo "leak:dyld4::RuntimeState"
              echo "leak:fetchInitializingClassList"
              echo "leak:std::rt::lang_start_internal"
            } > suppressions.txt
            PWD=$(pwd)
            export LSAN_OPTIONS="suppressions=$PWD/suppressions.txt"
          fi
          cargo nextest run --locked -Z build-std --features ci --profile ci --target "$TARGET"

      - name: Save simulation seeds artifact
        if: ${{ env.DUMP_SIMULATION_SEEDS }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: simulation-seeds-${{ matrix.os }}-sanitizer-${{ matrix.sanitizer }}
          path: ${{ env.DUMP_SIMULATION_SEEDS }}
          compression-level: 9
