name: Install Rust
description: Install Rust and tools

inputs:
  version:
    description: 'Rust toolchain version to install'
    default: 'stable'
  components:
    description: 'Rust components to install'
    default: ''
  tools:
    description: 'Additional Rust tools to install'
    default: ''
  token:
    description: 'A Github PAT'
    required: true
  targets:
    description: Comma-separated list of target triples to install for this toolchain
    required: false

runs:
  using: composite
  steps:
    - name: Upgrade rustup (MacOS)
      shell: bash
      if: runner.os == 'MacOS'
      run: brew update && brew upgrade rustup

    - name: Install Rust
      uses: dtolnay/rust-toolchain@21dc36fb71dd22e3317045c0c31a3f4249868b17 # master
      with:
        toolchain: ${{ inputs.version }}
        components: ${{ inputs.components }}
        targets: ${{ inputs.targets }}

    - name: Use sccache
      # Apparently the action can't be installed twice in the same workflow, so check if
      # it's already installed by checking if the RUSTC_WRAPPER environment variable is set
      # (which every "use" of this action needs to therefore set)
      if: env.RUSTC_WRAPPER != 'sccache'
      uses: mozilla-actions/sccache-action@2e7f9ec7921547d4b46598398ca573513895d0bd # v0.0.4

    - name: Enable sscache
      shell: bash
      run: |
        echo "CMAKE_C_COMPILER_LAUNCHER=sccache" >> "$GITHUB_ENV"
        echo "CMAKE_CXX_COMPILER_LAUNCHER=sccache" >> "$GITHUB_ENV"
        if [ "$GITHUB_WORKFLOW" ]; then
          echo "SCCACHE_GHA_ENABLED=true" >> "$GITHUB_ENV"
        fi
        echo "RUSTC_WRAPPER=sccache" >> "$GITHUB_ENV"
        echo "CARGO_INCREMENTAL=0" >> "$GITHUB_ENV"

    - name: Set up MSVC (Windows)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1
      # TODO: Would like to pin this, but the Mozilla org allowlist requires "ilammy/msvc-dev-cmd@v1*"
      # uses: ilammy/msvc-dev-cmd@0b201ec74fa43914dc39ae48a89fd1d8cb592756 # v1.13.0

    # See https://github.com/ilammy/msvc-dev-cmd#name-conflicts-with-shell-bash
    - name: Set up build environment (Windows)
      shell: bash
      if: runner.os == 'Windows'
      run: rm /usr/bin/link.exe || true

    - name: Install cargo-quickinstall
      shell: bash
      if: inputs.tools != ''
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: cargo +${{ inputs.version }} install cargo-quickinstall

    - name: Install Rust tools
      shell: bash
      if: inputs.tools != ''
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: cargo +${{ inputs.version }} quickinstall $(echo ${{ inputs.tools }} | tr -d ",")
