name: Install Rust
description: Install Rust and tools

inputs:
  version:
    description: 'Rust toolchain version to install'
    default: 'stable'
  components:
    description: 'Rust components to install'
    default: ''

runs:
  using: composite
  steps:
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ inputs.version }}
        components: ${{ inputs.components }}

    - name: Install cargo-binstall (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: Set-ExecutionPolicy Unrestricted -Scope Process; iex (iwr "https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.ps1").Content

    - name: Install cargo-binstall (Linux & MacOS)
      if: runner.os != 'Windows'
      shell: bash
      run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

    - name: Install Rust tools
      shell: bash
      run: cargo +${{ inputs.version }} binstall --no-confirm cargo-llvm-cov cargo-nextest flamegraph cargo-hack cargo-mutants hyperfine

    # sccache slows CI down, so we leave it disabled.
    # Leaving the steps below commented out, so we can re-evaluate enabling it later.
    # - name: Use sccache
    #   uses: mozilla-actions/sccache-action@v0.0.4

    # - name: Enable sscache
    #   shell: bash
    #   run: |
    #     if [ "${{ runner.os }}" = "Windows" ]; then
    #       echo "CC=sccache cl" >> "$GITHUB_ENV"
    #       echo "CXX=sccache cl" >> "$GITHUB_ENV"
    #     else
    #       echo "CC=sccache cc" >> "$GITHUB_ENV"
    #       echo "CXX=sccache c++" >> "$GITHUB_ENV"
    #     fi
    #     echo "SCCACHE_GHA_ENABLED=true" >> "$GITHUB_ENV"
    #     echo "RUSTC_WRAPPER=sccache" >> "$GITHUB_ENV"
    #     echo "CARGO_INCREMENTAL=0" >> "$GITHUB_ENV"

    # Ditto for rust-cache.
    # - name: Use Rust cache
    #   uses: Swatinem/rust-cache@v2
    #   with:
    #     cache-all-crates: "true"
